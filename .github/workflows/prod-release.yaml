name: Production Release
on:
  workflow_dispatch:

jobs:
  # This job does nothing other than run in the environment (which brings the protection rules into play)
  # and marks the main branch as deployed in prod
  approve-release:
    runs-on: ubuntu-latest
    environment:
      name: prod

    steps:
      - run: |
          echo "Prod deployment approved"

  # This job is not run in an environment, but the git push will fail if the main branch is not
  # marked as deployed in prod due to branch protection rules on the prod branch
  perform-release:
    needs: approve-release
    runs-on: ubuntu-latest

    steps:
      #####################
      - name: checkout prod
        ###################
        uses: actions/checkout@v3
        with:
          ref: prod

      ####################################
      - name: update prod branch from main
        ##################################
        id: update-prod
        run: |
          # this will fail if main and prod diverge
          git pull origin main
          git push
          echo "::set-output name=TARGET_COMMIT::$(git rev-parse --verify HEAD)"

      #################################
      - name: create release with notes
        ###############################
        uses: ./.github/actions/create-release
        with:
          base-version: "v1.0"
          target-commitish: ${{ steps.update-prod.outputs.TARGET_COMMIT }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
